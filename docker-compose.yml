---
version: "3"

services:
  valkey:
    image: valkey/valkey:7.2
    restart: unless-stopped
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - valkey-data:/data

  postgres:
    image: postgres:16.2-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_port_connectivity || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 5s

  webhook_handler:
    build:
      context: .
      dockerfile: Dockerfile.receiver
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      valkey:
        condition: service_started
        restart: true
      postgres:
        condition: service_started
        restart: true
      rabbitmq:
        condition: service_healthy
        restart: true

  discord_notifier:
    build:
      context: .
      dockerfile: Dockerfile.discord_notifier
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      valkey:
        condition: service_started
        restart: true
      postgres:
        condition: service_started
        restart: true
      rabbitmq:
        condition: service_healthy
        restart: true

volumes:
  valkey-data:
    driver: local
  db-data:
    driver: local
  rabbitmq-data:
    driver: local
